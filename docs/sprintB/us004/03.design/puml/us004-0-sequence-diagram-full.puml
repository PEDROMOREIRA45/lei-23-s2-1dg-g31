@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Property Owner" as User

' LOG IN
participant ":LogInUI" as UI_LI
participant ":LogInController" as CTRL_LI
participant "personRepository\n:PersonRepository" as personRepository

' SUBMIT PROPERTY
participant ":SubmiPropertytUI" as UI_SP
participant ":SubmiPropertyController" as CTRL_SP

participant ":Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT

participant "propertyRepository\n:PropertyRepository" as propertyRepository
participant "propertyHouseRepository\n:PropertyHouseRepository" as propertyHouseRepository
participant "propertyApartmentRepository\n:PropertyApartmenteRepository" as propertyApartmentRepository

participant "propertyTypeRepository\n:PropertyTypeRepository" as propertyTypeRepository
participant "businessTypeRepository\n:BusinessTypeRepository" as BusinessTypeRepository

' CHOOSE A AGENT
participant ":chooseAgentUI" as UI_CA
participant ":chooseAgentController" as CTRL_CA
participant "storesRepository\n:StoresRepository" as stores
participant "personRepository\n:PersonRepository" as personRepository

activate User

    User -> UI_LI: LogIn
    activate UI_LI

 UI --> User : requests data (Email, Password)
            create CTRL

        UI_LI -> CTRL_LI** : create

            UI_LI --> User : asks required data (email, password)

    User -> UI_LI : Types required data (email, password)

        UI_LI ->  UI_LI: keep (email,pass)

        UI_LI -> CTRL_LI: logIn()
            activate CTRL_LI


            CTRL_LI -> RepositorySingleton : getInstance()
                activate RepositorySingleton

                RepositorySingleton --> CTRL_LI: repositories
                deactivate RepositorySingleton

            CTRL_LI -> PLAT : getPersonRepository()
                activate PLAT

                PLAT --> CTRL_LI: personRepository
                deactivate PLAT

            CTRL_LI -> personRepository : getPersonByEmail()
                activate personRepository

            CTRL_LI -> personRepository : validatePass()
               deactivate personRepository
            deactivate CTRL_LI

        UI_LI -> User: Validate Login
        deactivate UI_LI

' SUBMIT PROPERTY
    User -> UI_SP : asks to submit new property
        activate UI_SP

        UI_SP -> CTRL_SP** : create

'   UI --> User : requests data (Property Type)

        UI_SP  ->  CTRL_SP : getPropertyTypes()
            activate CTRL_SP

            CTRL_SP  ->  RepositorySingleton : getPropertyTypes()
                activate RepositorySingleton

                RepositorySingleton --> CTRL_SP: getPropertyTypes()
                deactivate RepositorySingleton

            CTRL_SP -> propertyTypeRepository : getPropertyTypes()
                activate propertyTypeRepository

                propertyTypeRepository --> CTRL_SP : PropertyTypesList
                deactivate propertyTypeRepository

            CTRL_SP --> UI_SP : propertyTypeRepository
                deactivate CTRL_SP


            UI_SP --> User : shows propertyType list\n and asks to select one
            deactivate UI_SP

    User -> UI_SP : selects a Property Type
            activate UI_SP

            UI_SP  ->  UI_SP: keep Property Types

alt propertyType = House

            UI_SP -> User : ask data (year, month, day, \narea cms. Distance Kms, \nnumberBedrooms, numberParking, \nbasement, loft)
            deactivate UI_SP

    User -> UI_SP : types asked data (year, month, day, \narea cms. Distance Kms, \nnumberBedrooms, numberParking, \nbasement, loft)
            activate UI_SP

            UI_SP  ->  UI_SP: keep data

    group opt
            UI_SP -> User : ask data (numberBathrooms, \navailableEquipment, sunExposure)
                deactivate UI_SP

        User -> UI_SP : types asked data (numberBathrooms, \navailableEquipment, sunExposure)
                activate UI_SP

            UI_SP  ->  UI_SP: keep data
    end

            UI_SP -> CTRL_SP : getBusinessTypeRepository()
                activate CTRL_SP

                    CTRL_SP -> RepositorySingleton : getBusinessTypeRepository()
                    activate RepositorySingleton

                        RepositorySingleton --> CTRL_SP: repositories
                        deactivate RepositorySingleton

                    CTRL_SP -> PLAT : getBusinessTypeRepository()
                    activate PLAT

                        PLAT --> CTRL_SP: BusinessTypeRepository
                        deactivate PLAT

                    CTRL_SP -> BusinessTypeRepository: getBusinessTypeList()
                    activate BusinessTypeRepository

                    BusinessTypeRepository -> CTRL_SP: businessTypeList
                    deactivate BusinessTypeRepository

                    CTRL_SP ->  UI_SP: businessTypeList
                    deactivate CTRL_SP

            UI_SP --> User : shows businessTypeList\n and asks to select one
                deactivate UI_SP

        User -> UI_SP : selects a Business Type
                activate UI_SP

    alt businessType = Sale

            UI_SP -> User : ask data (Sale Price)
            deactivate UI_SP

        User -> UI_SP : types asked data (Sale Price)
            activate UI_SP

            UI_SP  ->  UI_SP: keep data

    else businessType = Rent

            UI_SP -> User : ask data (Rental Price, Duraction of Contract)
            deactivate UI_SP

        User -> UI_SP : types asked data (Rental Price, Duraction of Contract)
            activate UI_SP

            UI_SP  ->  UI_SP: keep data

    end

            UI_SP -> User: request data (property Photo)
            deactivate UI_SP

            User -> UI_SP : input asked data (property Photo)
                    activate UI_SP

            UI_SP  ->  UI_SP: keep photo

    opt

        loop

            UI_SP -> User: request data (property Photo)
            deactivate UI_SP

        User -> UI_SP : input asked data (property Photo)
                    activate UI_SP

            UI_SP  ->  UI_SP: keep photo

        end

    end

            UI_SP -> CTRL_SP : getPropertyHouseRepository()
                activate CTRL_SP

            CTRL_SP -> RepositorySingleton : getPropertyHouseRepository()
                    activate RepositorySingleton

                    RepositorySingleton --> CTRL_SP: repositories
                    deactivate RepositorySingleton

                CTRL_SP -> PLAT : getPropertyHouseRepository()
                activate PLAT

                    PLAT --> CTRL_SP: PropertyHouseRepository
                    deactivate PLAT

                CTRL_SP -> propertyHouseRepository: newHouseProperty()
                activate propertyHouseRepository

                    propertyHouseRepository -> CTRL_SP : newHouseProperty()
                    deactivate propertyHouseRepository

                CTRL_SP -> UI_SP: propertyHouseRepository
                deactivate CTRL_SP

else propertyType = Apartment

            UI_SP -> User : ask data (year, month, day, \narea cms. Distance Kms, \nnumberBedrooms, numberParking)
            deactivate UI_SP

    User -> UI_SP : types asked data (year, month, day, \narea cms. Distance Kms, \nnumberBedrooms, numberParking)
            activate UI_SP

            UI_SP  ->  UI_SP: keep data

group opt
            UI_SP -> User : ask data (numberBathrooms, \navailableEquipment, sunExposure)
            deactivate UI_SP

    User -> UI_SP : types asked data (numberBathrooms, \navailableEquipment, sunExposure)
            activate UI_SP

            UI_SP  ->  UI_SP: keep data

end

            UI_SP -> CTRL_SP : getBusinessTypeRepository()
                activate CTRL_SP

                    CTRL_SP -> RepositorySingleton : getBusinessTypeRepository()
                    activate RepositorySingleton

                        RepositorySingleton --> CTRL_SP: repositories
                        deactivate RepositorySingleton

                    CTRL_SP -> PLAT : getBusinessTypeRepository()
                    activate PLAT

                        PLAT --> CTRL_SP: BusinessTypeRepository
                        deactivate PLAT

                    CTRL_SP -> BusinessTypeRepository: getBusinessTypeList()
                    activate BusinessTypeRepository

                    BusinessTypeRepository -> CTRL_SP: businessTypeList
                    deactivate BusinessTypeRepository

                    CTRL_SP ->  UI_SP: businessTypeList
                    deactivate CTRL_SP

            UI_SP --> User : shows businessTypeList\n and asks to select one
                deactivate UI_SP

        User -> UI_SP : selects a Business Type
                activate UI_SP

    alt businessType = Sale

            UI_SP -> User : ask data (Sale Price)
            deactivate UI_SP

        User -> UI_SP : types asked data (Sale Price)
            activate UI_SP

            UI_SP  ->  UI_SP: keep data

    else businessType = Rent

            UI_SP -> User : ask data (Rental Price, Duraction of Contract)
            deactivate UI_SP

        User -> UI_SP : types asked data (Rental Price, Duraction of Contract)
            activate UI_SP

            UI_SP  ->  UI_SP: keep data

    end

            UI_SP -> User: request data (property Photo)
            deactivate UI_SP

            User -> UI_SP : input asked data (property Photo)
                    activate UI_SP

            UI_SP  ->  UI_SP: keep photo

    opt

        loop

            UI_SP -> User: request data (property Photo)
            deactivate UI_SP

        User -> UI_SP : input asked data (property Photo)
                    activate UI_SP

            UI_SP  ->  UI_SP: keep photo

        end

    end

            UI_SP -> CTRL_SP : getPropertyApartmentRepository()
                activate CTRL_SP

                CTRL_SP -> RepositorySingleton : getPropertyApartmentRepository()
                activate RepositorySingleton

                    RepositorySingleton --> CTRL_SP: repositories
                    deactivate RepositorySingleton

                CTRL_SP -> PLAT : getPropertyApartmentRepository()
                activate PLAT

                    PLAT --> CTRL_SP: PropertyApartmentRepository
                    deactivate PLAT

                CTRL_SP -> propertyApartmentRepository: newApartmentProperty()
                activate propertyApartmentRepository

                    propertyApartmentRepository -> CTRL_SP : newApartmentProperty()
                    deactivate propertyApartmentRepository

                CTRL_SP -> UI_SP: propertyApartmentRepository
                deactivate CTRL_SP

else propertyType = Land

            UI_SP -> User : ask data (year, month, day, \narea cms. Distance Kms, Description)
            deactivate UI_SP

    User -> UI_SP : types asked data (year, month, day, \narea cms. Distance Kms, Description)
            activate UI_SP

            UI_SP  ->  UI_SP: keep data

            UI_SP -> CTRL_SP : getBusinessTypeRepository()
                activate CTRL_SP

                    CTRL_SP -> RepositorySingleton : getBusinessTypeRepository()
                    activate RepositorySingleton

                        RepositorySingleton --> CTRL_SP: repositories
                        deactivate RepositorySingleton

                    CTRL_SP -> PLAT : getBusinessTypeRepository()
                    activate PLAT

                        PLAT --> CTRL_SP: BusinessTypeRepository
                        deactivate PLAT

                    CTRL_SP -> BusinessTypeRepository: getBusinessTypeList()
                    activate BusinessTypeRepository

                    BusinessTypeRepository -> CTRL_SP: businessTypeList
                    deactivate BusinessTypeRepository

                    CTRL_SP ->  UI_SP: businessTypeList
                    deactivate CTRL_SP

            UI_SP --> User : shows businessTypeList\n and asks to select one
                deactivate UI_SP

        User -> UI_SP : selects a Business Type
                activate UI_SP

    alt businessType = Sale

            UI_SP -> User : ask data (Sale Price)
            deactivate UI_SP

        User -> UI_SP : types asked data (Sale Price)
            activate UI_SP

            UI_SP  ->  UI_SP: keep data

    else businessType = Rent

            UI_SP -> User : ask data (Rental Price, Duraction of Contract)
            deactivate UI_SP

        User -> UI_SP : types asked data (Rental Price, Duraction of Contract)
            activate UI_SP

            UI_SP  ->  UI_SP: keep data

    end

            UI_SP -> User: request data (property Photo)
            deactivate UI_SP

            User -> UI_SP : input asked data (property Photo)
                    activate UI_SP

            UI_SP  ->  UI_SP: keep data

    opt

        loop

            UI_SP -> User: request data (property Photo)
            deactivate UI_SP

        User -> UI_SP : input asked data (property Photo)
                    activate UI_SP

            UI_SP  ->  UI_SP: keep data

        end

    end

            UI_SP -> CTRL_SP : getPropertyRepository()
                activate CTRL_SP

                CTRL_SP -> RepositorySingleton : getPropertyRepository()
                activate RepositorySingleton

                    RepositorySingleton --> CTRL_SP: repositories
                    deactivate RepositorySingleton

                CTRL_SP -> PLAT : getPropertyRepository()
                activate PLAT

                    PLAT --> CTRL_SP: PropertyRepository
                    deactivate PLAT

                CTRL_SP -> propertyRepository: newProperty()
                activate propertyRepository

                    propertyRepository -> CTRL_SP : newProperty()
                    deactivate propertyRepository

                CTRL_SP -> UI_SP: propertyRepository
                deactivate CTRL_SP
end

        UI_SP -> User: Display property conditions and ask for validation (YES/NO)
        deactivate UI_SP

    User -> UI_SP: input: validation (YES/NO)
        activate UI_SP

alt validation = YES
        UI_SP -> User : displays operation success, sends document operation details and conclusion
        deactivate UI_SP
end

' CHOOSE A AGENT

    User -> UI_CA : asks to submit new property
        activate UI_CA

        UI_CA -> CTRL_CA** : create

        UI_CA  ->  CTRL_CA : getStoreList()
            activate CTRL_CA

            CTRL_CA  ->  RepositorySingleton : getStoreList()
                activate RepositorySingleton

                RepositorySingleton --> CTRL_CA: getStoreList()
                deactivate RepositorySingleton

            CTRL_CA -> stores : getStoreList()
                activate stores

                stores --> CTRL_CA : storeList
                deactivate stores

            CTRL_CA --> UI_CA : storeList
            deactivate CTRL_CA

        UI_CA --> User : shows Store List list\n and asks to select one
        deactivate UI_CA

    User -> UI_CA : selects a Store
        activate UI_CA

        UI_CA  ->  UI_CA: keep store

        UI_CA  ->  CTRL_CA : getAgentList()
            activate CTRL_CA

            CTRL_CA  ->  RepositorySingleton : getAgentList()
                activate RepositorySingleton

                RepositorySingleton --> CTRL_CA: getAgentList()
                deactivate RepositorySingleton

            CTRL_CA -> personRepository : getAgentList()
                activate personRepository

                personRepository --> CTRL_CA : agentList
                deactivate personRepository

            CTRL_CA --> UI_CA : agentList
                deactivate CTRL_CA

        UI_CA --> User : shows Agent List list\n and asks to select one
            deactivate UI_CA

    User -> UI_CA : selects a Agent
        activate UI_CA

        UI_CA  ->  UI_CA: keep Agent

@enduml